[tool.poetry]
name = "py-course"
version = "0.1.0"
description = "Python Mastery Bootcamp: From Zero to L3/L4 Google Engineer"
authors = ["Chris"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
rich = "^13.7"
textual = "^0.41"
click = "^8.1"
httpx = "^0.25"
pydantic = "^2.5"
fastapi = "^0.108"
uvicorn = "^0.25"
sqlalchemy = "^2.0"
alembic = "^1.13"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8"
ruff = "^0.1.9"
pytest = "^7.4"
pytest-cov = "^4.1"
pytest-asyncio = "^0.21"
ipython = "^8.18"
black = "^23.12"
hypothesis = "^6.92"
locust = "^2.20"
pytest-mock = "^3.12"

[tool.poetry.group.ml]
optional = true

[tool.poetry.group.ml.dependencies]
numpy = "^1.26"
pandas = "^2.1"
scikit-learn = "^1.3"
torch = "^2.1"
matplotlib = "^3.8"
jupyter = "^1.0"
notebook = "^7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "N",    # pep8-naming
    "TID",  # flake8-tidy-imports
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py310"]